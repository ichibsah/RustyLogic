//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3082.
// 
#pragma warning disable 1591

namespace RustyLogic.RedDotNet.Service.Session {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SessionServiceSoap", Namespace="http://reddot.de/cms/webservices/navigation/1_1")]
    public partial class SessionService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectLanguageByKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectLanguageByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SessionService() {
            this.Url = global::RustyLogic.RedDotNet.Properties.Settings.Default.RedDotNet_Service_Session_SessionService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event SelectProjectCompletedEventHandler SelectProjectCompleted;
        
        /// <remarks/>
        public event SelectLanguageByKeyCompletedEventHandler SelectLanguageByKeyCompleted;
        
        /// <remarks/>
        public event SelectLanguageByIdCompletedEventHandler SelectLanguageByIdCompleted;
        
        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://reddot.de/cms/webservices/navigation/1_1/Login", RequestNamespace="http://reddot.de/cms/webservices/navigation/1_1", ResponseNamespace="http://reddot.de/cms/webservices/navigation/1_1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid Login(string userName, string password) {
            object[] results = this.Invoke("Login", new object[] {
                        userName,
                        password});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string userName, string password) {
            this.LoginAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string userName, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        userName,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://reddot.de/cms/webservices/navigation/1_1/SelectProject", RequestNamespace="http://reddot.de/cms/webservices/navigation/1_1", ResponseNamespace="http://reddot.de/cms/webservices/navigation/1_1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectProject(System.Guid projectId, System.Guid loginId) {
            object[] results = this.Invoke("SelectProject", new object[] {
                        projectId,
                        loginId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectProjectAsync(System.Guid projectId, System.Guid loginId) {
            this.SelectProjectAsync(projectId, loginId, null);
        }
        
        /// <remarks/>
        public void SelectProjectAsync(System.Guid projectId, System.Guid loginId, object userState) {
            if ((this.SelectProjectOperationCompleted == null)) {
                this.SelectProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectProjectOperationCompleted);
            }
            this.InvokeAsync("SelectProject", new object[] {
                        projectId,
                        loginId}, this.SelectProjectOperationCompleted, userState);
        }
        
        private void OnSelectProjectOperationCompleted(object arg) {
            if ((this.SelectProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectProjectCompleted(this, new SelectProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://reddot.de/cms/webservices/navigation/1_1/SelectLanguageByKey", RequestNamespace="http://reddot.de/cms/webservices/navigation/1_1", ResponseNamespace="http://reddot.de/cms/webservices/navigation/1_1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectLanguageByKey(string languageKey, string sessionKey, System.Guid loginId) {
            this.Invoke("SelectLanguageByKey", new object[] {
                        languageKey,
                        sessionKey,
                        loginId});
        }
        
        /// <remarks/>
        public void SelectLanguageByKeyAsync(string languageKey, string sessionKey, System.Guid loginId) {
            this.SelectLanguageByKeyAsync(languageKey, sessionKey, loginId, null);
        }
        
        /// <remarks/>
        public void SelectLanguageByKeyAsync(string languageKey, string sessionKey, System.Guid loginId, object userState) {
            if ((this.SelectLanguageByKeyOperationCompleted == null)) {
                this.SelectLanguageByKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectLanguageByKeyOperationCompleted);
            }
            this.InvokeAsync("SelectLanguageByKey", new object[] {
                        languageKey,
                        sessionKey,
                        loginId}, this.SelectLanguageByKeyOperationCompleted, userState);
        }
        
        private void OnSelectLanguageByKeyOperationCompleted(object arg) {
            if ((this.SelectLanguageByKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectLanguageByKeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://reddot.de/cms/webservices/navigation/1_1/SelectLanguageById", RequestNamespace="http://reddot.de/cms/webservices/navigation/1_1", ResponseNamespace="http://reddot.de/cms/webservices/navigation/1_1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectLanguageById(System.Guid languageId, string sessionKey, System.Guid loginId) {
            this.Invoke("SelectLanguageById", new object[] {
                        languageId,
                        sessionKey,
                        loginId});
        }
        
        /// <remarks/>
        public void SelectLanguageByIdAsync(System.Guid languageId, string sessionKey, System.Guid loginId) {
            this.SelectLanguageByIdAsync(languageId, sessionKey, loginId, null);
        }
        
        /// <remarks/>
        public void SelectLanguageByIdAsync(System.Guid languageId, string sessionKey, System.Guid loginId, object userState) {
            if ((this.SelectLanguageByIdOperationCompleted == null)) {
                this.SelectLanguageByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectLanguageByIdOperationCompleted);
            }
            this.InvokeAsync("SelectLanguageById", new object[] {
                        languageId,
                        sessionKey,
                        loginId}, this.SelectLanguageByIdOperationCompleted, userState);
        }
        
        private void OnSelectLanguageByIdOperationCompleted(object arg) {
            if ((this.SelectLanguageByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectLanguageByIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://reddot.de/cms/webservices/navigation/1_1/Logout", RequestNamespace="http://reddot.de/cms/webservices/navigation/1_1", ResponseNamespace="http://reddot.de/cms/webservices/navigation/1_1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Logout(System.Guid loginId) {
            this.Invoke("Logout", new object[] {
                        loginId});
        }
        
        /// <remarks/>
        public void LogoutAsync(System.Guid loginId) {
            this.LogoutAsync(loginId, null);
        }
        
        /// <remarks/>
        public void LogoutAsync(System.Guid loginId, object userState) {
            if ((this.LogoutOperationCompleted == null)) {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[] {
                        loginId}, this.LogoutOperationCompleted, userState);
        }
        
        private void OnLogoutOperationCompleted(object arg) {
            if ((this.LogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SelectProjectCompletedEventHandler(object sender, SelectProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SelectLanguageByKeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SelectLanguageByIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void LogoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591